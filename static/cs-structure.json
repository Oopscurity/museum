{
  "data": {
    "title": "Информатика",
    "description": "![Computer science](https://upload.wikimedia.org/wikipedia/commons/3/39/Lambda_lc.svg)\n\n**Информатика** - Наука о методах и процессах сбора, хранения, обработки, передачи, анализа и оценки информации с применением компьютерных технологий, обеспечивающих возможность её использования для принятия решений."
  },
  "children": [
    {
      "data": {
        "title": "Кибернетика",
        "description": "**Кибернетика** (от др.-греч. κυβερνητική — *«искусство управления»*) — наука об общих закономерностях получения, хранения, передачи и преобразования информации в сложных управляющих системах, будь то машины, живые организмы или общество."
      },
      "children": [
        {
          "data": {
            "title": "Бионика",
            "description": "**Бионика** (от др.-греч. βίον — *живущее*) — прикладная наука о применении в технических устройствах и системах принципов организации, свойств, функций и структур живой природы, то есть формы живого в природе и их промышленные аналоги. Проще говоря, бионика — это соединение биологии и техники. Бионика рассматривает биологию и технику совсем с новой стороны, объясняя, какие общие черты и какие различия существуют в природе и в технике."
          },
          "children": []
        },
        {
          "data": {
            "title": "Гомеостатика",
            "description": ""
          },
          "children": []
        },
        {
          "data": {
            "title": "Распознавание образов",
            "description": "**Теория распознавания образа** — раздел информатики и смежных дисциплин, развивающий основы и методы классификации и идентификации предметов, явлений, процессов, сигналов, ситуаций и т. п. объектов, которые характеризуются конечным набором некоторых свойств и признаков. Такие задачи решаются довольно часто, например, при переходе или проезде улицы по сигналам светофора. Распознавание цвета загоревшейся лампы светофора и знание правил дорожного движения позволяет принять правильное решение о том, можно или нельзя переходить улицу.\n\nНеобходимость в таком распознавании возникает в самых разных областях — от военного дела и систем безопасности до оцифровки аналоговых сигналов.\n\nПроблема распознавания образа приобрела выдающееся значение в условиях информационных перегрузок, когда человек не справляется с линейно-последовательным пониманием поступающих к нему сообщений, в результате чего его мозг переключается на режим одновременности восприятия и мышления, которому такое распознавание свойственно."
          },
          "children": []
        },
        {
          "data": {
            "title": "Автоматическое управление",
            "description": "**Теория автоматического управления** (ТАУ) — научная дисциплина, которая изучает процессы автоматического управления объектами разной физической природы. При этом при помощи математических средств выявляются свойства систем автоматического управления и разрабатываются рекомендации по их проектированию."
          },
          "children": []
        },
        {
          "data": {
            "title": "Математическая лингвистика",
            "description": "**Компьютерная лингвистика** (также: **математическая** или **вычислительная лингвистика**, англ. *computational linguistics*) — научное направление в области математического и компьютерного моделирования интеллектуальных процессов у человека и животных при создании систем искусственного интеллекта, которое ставит своей целью использование математических моделей для описания естественных языков."
          },
          "children": []
        }
      ]
    },
    {
      "data": {
        "title": "Теоретическая информатика",
        "description": "**Теоретическая информатика** — это научная область, предметом изучения которой являются информация и информационные процессы, в которой осуществляется изобретение и создание новых средств работы с информацией.\n\nКак любая фундаментальная наука, теоретическая информатика (в тесном взаимодействии с философией и кибернетикой) занимается созданием системы понятий, выявлением общих закономерностей, позволяющих описывать информацию и информационные процессы, протекающие в различных сферах (в природе, обществе, человеческом организме, технических системах)."
      },
      "children": [
        {
          "data": {
            "title": "Математическая логика",
            "description": "**Математическая логика** (теоретическая логика, символическая логика) — раздел математики, изучающий математические обозначения, формальные системы, доказуемость математических суждений, природу математического доказательства в целом, вычислимость и прочие аспекты оснований математики.\n\nВ более широком смысле рассматривается как математизированная ветвь формальной логики — «логика по предмету, математика по методу», «логика, развиваемая с помощью математических методов»."
          },
          "children": [
            {
              "data": {
                "title": "Годфрид Вильгельм Лейбниц",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/6/6a/Gottfried_Wilhelm_von_Leibniz.jpg)\n\nВ области логики Годфрид Вильгельм Лейбниц разрабатывал учение об анализе и синтезе. Логику он понимал как науку о всех возможных мирах. Лейбницу принадлежит первая в истории формулировка закона достаточного основания; он также является автором принятой в современной логике формы выражения закона тождества. Закон тождества он считал высшим принципом логики. «Природа истины вообще состоит в том, что она есть нечто тождественное».\n\nСформулированный Лейбницем закон тождества в настоящее время используется в большинстве современных логико-математических исчислений. С законом тождества связан принцип подстановки эквивалентных: «Если А есть В и В есть А, тогда А и В называются „тем же самым“. Или: А и В есть то же самое, если они могут быть подставлены один вместо другого».\n\nЕдиной системы обозначений Лейбниц не выработал, наиболее разработано им исчисление «плюс — минус». Удачным оказалось предложенное Лейбницем для вывода правильных модусов силлогизмов представление суждений посредством параллельных отрезков или кругов.\n\nЛейбниц выступил создателем наиболее полной для его времени классификации определений, кроме того, он разработал теорию генетических определений. В своём труде «Об искусстве комбинаторики», написанном в 1666 году, Лейбниц предвосхитил некоторые моменты современной математической логики. \n\nГотфриду Вильгельму Лейбницу принадлежит авторство идеи использования математической символики в логике и построений логических исчислений. Он выдвинул задачу фундирования математических истин на общелогических принципах, а также предложил применить бинарную, то есть двоичную, систему счисления для целей вычислительной математики. Лейбниц обосновал значение рациональной символики для логики и для эвристических заключений; он утверждал, что познание сводится к доказательствам утверждений, находить же доказательства необходимо по определённому методу. Согласно Лейбницу, сам по себе математический метод не достаточен, чтобы открыть всё то, что мы ищем, но он предохраняет от ошибок.\n\nВ «Новых опытах» (книга 4) Лейбниц дал дедуктивный анализ традиционной логики, показав, что 2-я и 3-я фигуры силлогизма могут быть получены как следствие из модуса Barbara при помощи закона противоречия, а 4-я фигура — с использованием закона обращения; здесь же он дал новую классификацию модусов силлогизма."
              }
            },
            {
              "data": {
                "title": "Джордж Буль",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/6/6c/George_Boole.jpg)\n\nБуль был, вероятно, первым после Джона Валлиса математиком, обратившимся к логической проблематике. Идеи применения символического метода к логике впервые высказаны им в статье «Математический анализ логики» (1847). Не удовлетворённый полученными в ней результатами, Буль высказывал пожелание, чтобы о его взглядах судили по обширному трактату «Исследование законов мышления, на которых основываются математические теории логики и вероятностей» (1854). Буль не считал логику разделом математики, но находил глубокую аналогию между символическим методом алгебры и символическим методом представления логических форм и силлогизмов. Единицей Буль обозначал универсум мыслимых объектов, буквенными символами — выборки из него, связанные с обычными прилагательными и существительными (так, если x = \"рогатые\", а y = \"овцы\", последовательный выбор x и y из единицы даст класс рогатых овец). Буль показал, что символика такого рода подчиняется тем же законам, что и алгебраическая, из чего следовало, что их можно складывать, вычитать, умножать и даже делить. В такой символике высказывания могут быть сведены к форме уравнений, а заключение из двух посылок силлогизма — получено путём исключения среднего термина по обычным алгебраическим правилам. Ещё более оригинальной и примечательной была часть его системы, представленной в «Законах мышления…», образующая общий символический метод логического вывода. Буль показал, как из любого числа высказываний, включающих любое число терминов, вывести любое заключение, следующее из этих высказываний, путём чисто символических манипуляций. Вторая часть «Законов мышления…» содержит аналогичную попытку обнаружить общий метод в исчислении вероятностей, позволяющий из заданных вероятностей совокупности событий определить вероятность любого другого события, логически связанного с ними."
              }
            },
            {
              "data": {
                "title": "Фридрих Людвиг Готлоб Фреге",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/9/99/Young_frege.jpg)\n\nВклад Фреге в логику многие сравнивают с вкладом Аристотеля, Курта Гёделя и Альфреда Тарского. Его революционное сочинение Begriffsschrift (Исчисление понятий) (1879) положило начало новой эпохе в истории логики. В Begriffsschrift Фреге с совершенно новых позиций пересмотрел ряд математических проблем, включая ясную трактовку понятий функции и переменных. Он, по сути дела, изобрел и аксиоматизировал логику предикатов, благодаря своему открытию кванторов, использование которых постепенно распространилось на всю математику и позволило решить средневековую проблему множественной общности. Эти достижения открыли дорогу к теории описаний Бертрана Рассела и Principia Mathematica (написанной Расселом вместе с Альфредом Уайтхедом), и знаменитой гёделевской теореме о неполноте.\n\nФреге ввел различение между смыслом (нем. Sinn) и значением (нем. Bedeutung) понятия, обозначаемого определенным именем (так называемый треугольник Фреге или семантический треугольник: знак—смысл—значение). Под значением в рамках его системы представлений понималась предметная область, соотнесенная с неким именем. Под смыслом подразумевается определенный аспект рассмотрения этой предметной области."
              }
            }
          ]
        },
        {
          "data": {
            "title": "Вычислительная математика",
            "description": "**Вычислительная математика** — раздел математики, включающий круг вопросов, связанных с производством разнообразных вычислений. В более узком понимании вычислительная математика — теория численных методов решения типовых математических задач. Современная вычислительная математика включает в круг своих проблем изучение особенностей вычисления с применением компьютеров.\n\nВычислительная математика обладает широким кругом прикладных применений для проведения научных и инженерных расчётов. На её основе в последнее десятилетие образовались такие новые области естественных наук, как вычислительная химия, вычислительная биология и так далее."
          },
          "children": [
            {
              "data": {
                "title": "Брук Тейлор",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/2/25/BTaylor.jpg)\n\n**Ряд Тейлора** — разложение функции в бесконечную сумму степенных функций.\n\nРядом Тейлора функции ![enter image description here](https://wikimedia.org/api/rest_v1/media/math/render/svg/202945cce41ecebb6f643f31d119c514bec7a074), бесконечно дифференцируемой в точке ***a***, называется функциональный формальный ряд\n\n![enter image description here](https://wikimedia.org/api/rest_v1/media/math/render/svg/9590b3a377cd134e79724beec5abfc59ac643c42) с параметром ***a***\n\nТо есть, рядом Тейлора для функции ![enter image description here](https://wikimedia.org/api/rest_v1/media/math/render/svg/202945cce41ecebb6f643f31d119c514bec7a074) в окрестности точки ***a*** называется степенной ряд относительно двучлена ![enter image description here](https://wikimedia.org/api/rest_v1/media/math/render/svg/e32f42f9f52615f0186e3c8f2c25d7cd6f7bd6aa) вида \n\n![enter image description here](https://wikimedia.org/api/rest_v1/media/math/render/svg/59ccf0743594b31adcee108369960f7534a7b431)\n\nТеорема Тейлора даёт приближение к функции, дифференцируемой k раз, вблизи данной точки с помощью многочлена Тейлора k-го порядка. Для аналитических функций многочлен Тейлора в данной точке является частичной суммой их ряда Тейлора, который, в свою очередь, полностью определяет функцию в некоторой окрестности точки. Точное содержание теоремы Тейлора до настоящего времени не согласовано. Конечно, существует несколько версий теоремы, применимых в различных ситуациях, и некоторые из этих версий содержат оценки ошибки, возникающей при приближении функции с помощью многочлена Тейлора.\n\nЭта теорема названа в честь математика Брука Тейлора, который сформулировал одну из её версий в 1712 году. Явное выражение для ошибки приближения было дано намного позже Жозефом Лагранжем. Ранее, в 1671 году, Джеймсом Грегори уже было упомянуто следствие из теоремы.\n\nТеорема Тейлора позволяет овладеть приёмами вычислений начального уровня, и она является одним из центральных элементарных инструментов в математическом анализе. При изучении математики она является начальной точкой для изучения асимптотического анализа (англ.). Теорема также используется в математической физике. Она также обобщается на функции нескольких переменных и векторные функции f : Rn → Rm для любых размерностей n и m. Это обобщение теоремы Тейлора является базовым для определения так называемых струй, которые появляются в дифференциальной геометрии и в теории дифференциальных уравнений с частными производными."

              }
            },
            {
              "data": {
                "title": "Пафнутий Львович Чебышёв",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Pafnuty_Lvovich_Chebyshev.jpg/267px-Pafnuty_Lvovich_Chebyshev.jpg)\n\nОсновные математические исследования П. Л. Чебышёва относятся к теории чисел, теории вероятностей, теории приближения функций, математическому анализу, геометрии, прикладной математике.\n\n\n\nТворческий метод Чебышёва отличало стремление к увязке проблем математики с вопросами естествознания и техники и к соединению абстрактной теории с практикой. Учёный указывал: «Сближение теории с практикою даёт самые благотворные результаты, и не одна только практика от этого выигрывает: сами науки развиваются под влиянием её: она открывает им новые предметы для исследования или новые стороны в предметах давно известных… Если теория много выигрывает от новых приложений старой методы или от новых развитий её, то она ещё более приобретает открытием новых метод, и в этом случае науки находят себе верного руководителя в практике».\n\n### Теория чисел\n\nИз многочисленных открытий Чебышёва надо упомянуть прежде всего работы по теории чисел. Начало им было положено докторской диссертацией Чебышёва «Теория сравнений», напечатанной в 1849 году; она стала первой отечественной монографией по теории чисел. Этот труд несколько раз переиздавался, был переведен на немецкий и итальянский языки.\n\n### Теория вероятностей\n\nЧебышёв стал первым русским математиком мирового уровня и в теории вероятностей. С 1860 года он сменил В. Я. Буняковского на кафедре теории вероятностей Петербургского университета и начал свой цикл лекций. Он опубликовал по данной теме всего четыре работы, но фундаментального характера. В статье «О средних величинах» (1866 год) было впервые доказано «неравенство Чебышёва», позднее усиленное Марковым.\n\n### Теория приближенной функции\n\nХотя теория приближения функций имеет достаточно богатую предысторию, собственно историю этого раздела математики принято исчислять с 1854 года, когда была опубликована статья П. Л. Чебышёва «Теория механизмов, известных под названием параллелограммов». Она стала первой из серии работ учёного по «функциям, наименее уклоняющимся от нуля» (исследованиям в данной области Чебышёв посвятил сорок лет)."
              }
            }
          ]
        },
        {
          "data": {
            "title": "Теория информатики",
            "description": ""
          },
          "children": [
            {
              "data": {
                "title": "Дэвид Хаффман",
                "description": "![enter image description here](http://www.adeptis.ru/vinci/david_huffman1.jpg)\n\nАлгоритм Хаффмана — жадный алгоритм оптимального префиксного кодирования алфавита с минимальной избыточностью. Был разработан в 1952 году аспирантом Массачусетского технологического института Дэвидом Хаффманом при написании им курсовой работы. В настоящее время используется во многих программах сжатия данных.\n\nЭтот метод кодирования состоит из двух основных этапов:\n\n1. Построение оптимального кодового дерева;\n2. Построение отображения код-символов на основе построенного дерева.\n\n Один из первых алгоритмов эффективного кодирования информации был предложен Д. А. Хаффманом в 1952 году. Идея алгоритма состоит в следующем: зная вероятности символов в сообщении, можно описать процедуру построения кодов переменной длины, состоящих из целого количества битов. Символам с большей вероятностью ставятся в соответствие более короткие коды. Коды Хаффмана обладают свойством префиксности (то есть ни одно кодовое слово не является префиксом другого), что позволяет однозначно их декодировать.\n\nКлассический алгоритм Хаффмана на входе получает таблицу частот встречаемости символов в сообщении. Далее на основании этой таблицы строится дерево кодирования Хаффмана (Н-дерево).\n\n1. Символы входного алфавита образуют список свободных узлов. Каждый лист имеет вес, который может быть равен либо вероятности, либо количеству вхождений символа в сжимаемое сообщение\n2. Выбираются два свободных узла дерева с наименьшими весами.\n3. Создается их родитель с весом, равным их суммарному весу.\n4. Родитель добавляется в список свободных узлов, а два его потомка удаляются из этого списка.\n5. Одной дуге, выходящей из родителя, ставится в соответствие бит 1, другой — бит 0.\n6. Шаги, начиная со второго, повторяются до тех пор, пока в списке свободных узлов не останется только один свободный узел. Он и будет считаться корнем дерева."
              }
            },
            {
              "data": {
                "title": "Клод Шеннон",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/ru/3/3d/Shannon.jpg)\n\nКлод Элвуд Шеннон (англ. Claude Elwood Shannon; 30 апреля 1916, Петоцки (англ.)русск., Мичиган, США — 24 февраля 2001, Медфорд, Массачусетс, США) — американский инженер и математик, его работы являются синтезом математических идей с конкретным анализом чрезвычайно сложных проблем их технической реализации.\n\nЯвляется основателем теории информации, нашедшей применение в современных высокотехнологических системах связи. Шеннон внес огромный вклад в теорию вероятностных схем, теорию автоматов и теорию систем управления — области наук, входящие в понятие «кибернетика». В 1948 году предложил использовать слово «бит» для обозначения наименьшей единицы информации (в статье «Математическая теория связи»).\n\nАлгоритм Шеннона — Фано — один из первых алгоритмов сжатия, который впервые сформулировали американские учёные Шеннон и Роберт Фано. Данный метод сжатия имеет большое сходство с алгоритмом Хаффмана, который появился на несколько лет позже и является логическим продолжением алгоритма Шеннона. Алгоритм использует коды переменной длины: часто встречающийся символ кодируется кодом меньшей длины, редко встречающийся — кодом большей длины. Коды Шеннона — Фано префиксные, то есть никакое кодовое слово не является префиксом любого другого. Это свойство позволяет однозначно декодировать любую последовательность кодовых слов.Кодирование Шеннона — Фано (англ. Shannon–Fano coding) — алгоритм префиксного неоднородного кодирования. Относится к вероятностным методам сжатия (точнее, методам контекстного моделирования нулевого порядка). Подобно алгоритму Хаффмана, алгоритм Шеннона — Фано использует избыточность сообщения, заключённую в неоднородном распределении частот символов его (первичного) алфавита, то есть заменяет коды более частых символов короткими двоичными последовательностями, а коды более редких символов — более длинными двоичными последовательностями.\n\nАлгоритм был независимо друг от друга разработан Шенноном (публикация «Математическая теория связи», 1948 год) и, позже, Фано (опубликовано как технический отчёт).\n\nОсновные этапы:\n\n1. Символы первичного алфавита m1 выписывают по убыванию вероятностей.\n\n2. Символы полученного алфавита делят на две части, суммарные\n\n    вероятности символов которых максимально близки друг другу. \n\n3. В префиксном коде для первой части алфавита присваивается двоичная цифра «0», второй части — «1». \n\n4. Полученные части рекурсивно делятся и их частям назначаются соответствующие двоичные цифры в префиксном коде."
              }
            },
            {
              "data": {
                "title": "Роберт Фано",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/1/11/Robert_Fano_2012-03-13.jpg)\n\nРоберт Марио Фано (Robert Mario Fano, 11 ноября 1917[2], Турин, Италия — 13 июля 2016, Нейплс, Флорида, США) — итальяно-американский учёный в области информатики, профессор-эмерит факультетов электротехники и компьютерных наук в Массачусетском технологическом институте, действительный член Национальной академии наук США и ряда других национальных академий. Фано известен по работам в области теории информации, он независимо от Клода Шеннона изобрел ранний алгоритм сжатия информации и вывел неравенство Фано.\n\nАлгоритм Шеннона — Фано — один из первых алгоритмов сжатия, который впервые сформулировали американские учёные Шеннон и Роберт Фано. Данный метод сжатия имеет большое сходство с алгоритмом Хаффмана, который появился на несколько лет позже и является логическим продолжением алгоритма Шеннона. Алгоритм использует коды переменной длины: часто встречающийся символ кодируется кодом меньшей длины, редко встречающийся — кодом большей длины. Коды Шеннона — Фано префиксные, то есть никакое кодовое слово не является префиксом любого другого. Это свойство позволяет однозначно декодировать любую последовательность кодовых слов.Кодирование Шеннона — Фано (англ. Shannon–Fano coding) — алгоритм префиксного неоднородного кодирования. Относится к вероятностным методам сжатия (точнее, методам контекстного моделирования нулевого порядка). Подобно алгоритму Хаффмана, алгоритм Шеннона — Фано использует избыточность сообщения, заключённую в неоднородном распределении частот символов его (первичного) алфавита, то есть заменяет коды более частых символов короткими двоичными последовательностями, а коды более редких символов — более длинными двоичными последовательностями.\n\nАлгоритм был независимо друг от друга разработан Шенноном (публикация «Математическая теория связи», 1948 год) и, позже, Фано (опубликовано как технический отчёт).\n\nОсновные этапы:\n\n1. Символы первичного алфавита m1 выписывают по убыванию вероятностей.\n\n2. Символы полученного алфавита делят на две части, суммарные\n\n    вероятности символов которых максимально близки друг другу. \n\n3. В префиксном коде для первой части алфавита присваивается двоичная цифра «0», второй части — «1». \n\n4. Полученные части рекурсивно делятся и их частям назначаются соответствующие двоичные цифры в префиксном коде."
              }
            }
          ]
        },
        {
          "data": {
            "title": "Системный анализ",
            "description": "**Системный анализ** — научный метод познания, представляющий собой последовательность действий по установлению структурных связей между переменными или элементами исследуемой системы. Опирается на комплекс общенаучных, экспериментальных, естественнонаучных, статистических, математических методов."
          },
          "children": [
            {
              "data": {
                "title": "Никита Николаевич Моисеев",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/8/89/Nikita_Nikolaevich_Moiseyev-01.jpg)\n\nНикита Николаевич Моисеев (10 [23] августа 1917, Москва — 29 февраля 2000, там же) — советский и российский учёный в области общей механики и прикладной математики, академик Академии наук СССР (впоследствии РАН) (1984) и ВАСХНИЛ (впоследствии РАСХН) (1985), почётный член Российской академии естественных наук (РАЕН), член Международной академии астронавтики (Париж), президент Российского отделения «Зелёного креста», президент Российского национального комитета содействия Программе ООН по охране окружающей среды, президент Международного независимого эколого-политологического университета (МНЭПУ) (1993—2000), главный редактор журнала «Экология и жизнь» (1995—2000). Основатель и руководитель целого ряда научных школ. Автор 35 монографий, 10 учебных пособий и более 300 научных и научно-популярных статей. Труды по динамике твёрдого тела с жидкостью, численным методам математической физики, теории оптимизации управления и др.\n\nОсновные направления исследовательской деятельности\n\n 1. теория системного анализа и оптимальных систем;\n 2. прикладная математика и её приложения для решения сложных задач физики и техники;\n 3. теория и методы расчёта систем управления и траекторий космических объектов;\n 4. теория управления (общие вопросы теории и методы расчёта конкретных систем управления космическими объектами) и методы оптимизации, в том числе природопользования;\n 5. модели динамики биосферы и её стабильности при антропогенных воздействиях (в 1983 году были получены количественные оценки возможных последствий ядерной войны, известные как «ядерная зима» и «ядерная ночь»);\n 6. философия естествознания, в том числе методологические проблемы взаимоотношения биосферы и общества и математические модели стабильности биосферы в условиях антропогенных воздействий;\n 7. философские и политологические проблемы общества в условиях переходного периода России[3], процессов самоорганизации (или универсального эволюционизма, по терминологии Н. Н. Моисеева) и необратимости эволюционных процессов;\n 8. педагогические и этические проблемы формирования нового мировоззрения для пересмотра взаимоотношения человека и природы, идей эпохи ноосферы В. И. Вернадского и провозглашение коэволюции человека и биосферы как условия выживания человека на планете.\n\nН. Н. Моисеев — основоположник целого ряда новых направлений в прикладной математике. Его работы посвящены механике и гидродинамике, численным методам в теории оптимального управления, теории иерархических систем, имитационному моделированию, автоматизации проектирования, междисциплинарным исследованиям экологических проблем. В каждой из этих областей Никите Николаевичу принадлежат основополагающие достижения.\n\nНаучные интересы Н. Н. Моисеева были широки и разнообразны. Понимание перспектив развития прикладной математики, вычислительной техники, острая гражданская заинтересованность проблемами страны 50 с лишним лет определяли направления и характер его деятельности. Будучи заместителем директора Вычислительного центра АН СССР (впоследствии — РАН), Н. Н. Моисеев открывал новые области исследований, устанавливал тесные контакты с отраслевыми НИИ и КБ, создавал новые отделы.\n\nНикита Николаевич содействовал созданию Российского общества экологической экономики (РОЭЭ), и выступил с пленарным докладом на открытии его Первой Международной конференции в 1993 году, был членом Совета общества."
              }
            }
          ]
        },
        {
          "data": {
            "title": "Теория принятия решений",
            "description": "**Теория принятия решений** — область исследования, вовлекающая понятия и методы математики, статистики, экономики, менеджмента и психологии с целью изучения закономерностей выбора людьми путей решения проблем и задач, а также способов достижения желаемого результата.\n\nРазличают *нормативную теорию*, которая описывает рациональный процесс принятия решения и *дескриптивную теорию*, описывающую практику принятия решений."
          },
          "children": [
            {
              "data": {
                "title": "Чарльз Фоги",
                "description": "**Чарльз Форги** — создатель Rete.\n\n**Rete** — эффективный алгоритм сопоставления с образцом для продукционных систем, экспертных систем и баз знаний. Впервые был описан в рабочем документе 1974 года, затем в докторской диссертации 1979 и в статье 1982 года (см Ссылки). Rete стал основой многих популярных экспертных систем, включая CLIPS, Jess, Drools, BizTalk Rules Engine и Soar.\n\nПри наивной реализации экспертная система проверяет применимость каждого правила вывода к каждому факту базы знаний, при необходимости выполняет его и переходит к следующему правилу, возвращаясь в начало при исчерпании всех правил. Даже для небольшого набора правил и фактов такой метод работает неприемлемо медленно. Алгоритм Rete обеспечивает более высокую эффективность. При использовании Rete экспертная система строит специальный граф или префиксное дерево, узлам которого соответствуют части условий правил. Путь от корня до листа образует полное условие некоторой продукции. В процессе работы каждый узел хранит список фактов, соответствующих условию. При добавлении или модификации факта он прогоняется по сети, при этом отмечаются узлы, условиям которых данный факт соответствует. При выполнении полного условия правила, когда система достигает листа графа, правило выполняется.\n\nАлгоритм Rete жертвует объёмом памяти ради скорости. В большинстве случаев скорость возрастает на порядки (так как эффективность теоретически не зависит от числа правил в системе). В экспертных системах с большим числом правил классический Rete требует слишком много памяти, но появились новые алгоритмы, в том числе основанные на Rete, ограничивающиеся разумным объёмом памяти.\n\nАлгоритм Rete содержит обобщение логики функционала, ответственного за связь данных (фактов) и алгоритма (продукций) в системах сопоставления с образцом (вид систем: системы основанные на правилах). Продукция состоит из одного или нескольких условий и набора действий, выполняемых если актуальный набор фактов соответствует одному из условий. Условия накладываются на атрибуты фактов, включая их типы и идентификаторы. Алгоритм Rete имеет следующие характеристики:\n\n  1. Уменьшает или исключает избыточность условий за счет объединения узлов.\n  2. Сохраняет частичные соответствия между фактами при слиянии разных типов фактов. Это позволяет избежать полного вычисления (re-evaluation) всех фактов при любом изменении в рабочей памяти продукционной системы. Система работает только с самими изменениями (deltas).\n 3. Позволяет эффективно высвобождать память при удалении фактов.\n\nАлгоритм Rete широко используется для реализации сопоставления с образцом в системах с циклом сопоставление-решение-действие (match-resolve-act) для генерации и логического вывода.\n\nRete это Направленный ациклический граф из правил высшего порядка. Обычно это сеть объектов в оперативной памяти, устанавливливающая связь условий правил и фактов (реляционных кортежей). Сеть Rete действует как процессор реляционных запросов, выполняя проекции, выборки и мультиплицирование небольшого числа записей."
              }
            }
          ]
        }
      ]
    },
    {
      "data": {
        "title": "Искусственный интеллект",
        "description": "**Искусственный интеллект** (ИИ, англ. *Artificial intelligence*, *AI*)\n\n1. наука и технология создания интеллектуальных машин, особенно интеллектуальных компьютерных программ;\n2. свойство интеллектуальных систем выполнять творческие функции, которые традиционно считаются прерогативой человека.\n\nИИ связан со сходной задачей использования компьютеров для понимания человеческого интеллекта, но не обязательно ограничивается биологически правдоподобными методами."
      },
      "children": [
        {
          "data": {
            "title": "Робототехника",
            "description": "**Робототехника** (от робот и техника; англ. *robotics* — роботика, роботехника) — прикладная наука, занимающаяся разработкой автоматизированных технических систем и являющаяся важнейшей технической основой интенсификации производства.\n\nРобототехника опирается на такие дисциплины, как электроника, механика, телемеханика, информатика, а также радиотехника и электротехника. Выделяют строительную, промышленную, бытовую, авиационную и экстремальную (военную, космическую, подводную) робототехнику."
          },
          "children": [
            {
              "data": {
                "title": "Айзек Азимов",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/3/34/Isaac.Asimov01.jpg)\n\nАйзек Азимов (Isaac Asimov, имя при рождении Исак Юдович Озимов; 2 января 1920 года, Петровичи, Шумячский район, Смоленская область, РСФСР — 6 апреля 1992 года, Нью-Йорк, США) — американский писатель-фантаст, популяризатор науки, биохимик. Автор около 500 книг, в основном художественных (прежде всего в жанре научной фантастики, но также и в других жанрах: фэнтези, детектив, юмор) и научно-популярных (в самых разных областях — от астрономии и генетики до истории и литературоведения). Многократный лауреат премий Хьюго и Небьюла. Некоторые термины из его произведений — robotics (роботехника, роботика), positronic (позитронный), psychohistory (психоистория, наука о поведении больших групп людей) — прочно вошли в английский и другие языки. В англо-американской литературной традиции Азимова вместе с Артуром Кларком и Робертом Хайнлайном относят к «Большой тройке» писателей-фантастов.\n\n\n\nТри закона роботехники в научной фантастике — обязательные правила поведения для роботов, впервые сформулированные Айзеком Азимовым в рассказе «Хоровод» (1942).\n\n\n\nЗаконы гласят:\n\n1. Робот не может причинить вред человеку или своим бездействием допустить, чтобы человеку был причинён вред.\n2. Робот должен повиноваться всем приказам, которые даёт человек, кроме тех случаев, когда эти приказы противоречат Первому Закону.\n3. Робот должен заботиться о своей безопасности в той мере, в которой это не противоречит Первому или Второму Законам."
              }
            }
          ]
        }
      ]
    },
    {
      "data": {
        "title": "Программирование",
        "description": "**Программирование** — процесс создания компьютерных программ.\n\nПо известному выражению Никлауса Вирта «Программы = алгоритмы + структуры данных»; иными словами, ключевыми непосредственными задачами программирования являются создание и использование алгоритмов и структур данных.\n\nВ более широком смысле под программированием понимают весь спектр деятельности, связанный с созданием и поддержанием в рабочем состоянии программ — программного обеспечения. Эта инженерно-техническая дисциплина называется «программная инженерия». Сюда входят анализ и постановка задачи, проектирование программы, построение алгоритмов, разработка структур данных, написание текстов программ, отладка и тестирование программы (испытания программы), документирование, настройка (конфигурирование), доработка и сопровождение."
      },
      "children": [
        {
          "data": {
            "title": "Системное ПО",
            "description": "**Системное программное обеспечение** — комплекс программ, которые обеспечивают управление компонентами компьютерной системы, такими как процессор, оперативная память, устройства ввода-вывода, сетевое оборудование, выступая как «межслойный интерфейс», с одной стороны которого аппаратура, а с другой — приложения пользователя.\n\nВ отличие от прикладного программного обеспечения, системное не решает конкретные практические задачи, а лишь обеспечивает работу других программ, предоставляя им сервисные функции, абстрагирующие детали аппаратной и микропрограммной реализации вычислительной системы, управляет аппаратными ресурсами вычислительной системы."
          },
          "children": [
            {
              "data": {
                "title": "Операционные системы",
                "description": "**Операционная система**, сокр. **ОС** (англ. *operating system*, *OS*) — комплекс взаимосвязанных программ, предназначенных для управления ресурсами компьютера и организации взаимодействия с пользователем.\n\nВ логической структуре типичной вычислительной системы операционная система занимает положение между устройствами с их микроархитектурой, машинным языком и, возможно, собственными (встроенными) микропрограммами (драйверами) — с одной стороны — и прикладными программами с другой.\n\nРазработчикам программного обеспечения операционная система позволяет абстрагироваться от деталей реализации и функционирования устройств, предоставляя минимально необходимый набор функций (см.: интерфейс программирования приложений).\n\nВ большинстве вычислительных систем операционная система является основной, наиболее важной (а иногда и единственной) частью системного программного обеспечения. С 1990-х годов наиболее распространёнными операционными системами являются системы семейства Windows, UNIX и UNIX-подобные системы."
              },
              "children": [
                {
                  "data": {
                    "title": "Фредерик Брукс",
                    "description": ""
                  }
                }
              ]
            }
          ]
        },
        {
          "data": {
            "title": "Прикладное ПО",
            "description": "**Прикладная программа** или **приложение** — программа, предназначенная для выполнения определённых задач и рассчитанная на непосредственное взаимодействие с пользователем. В большинстве операционных систем прикладные программы не могут обращаться к ресурсам компьютера напрямую, а взаимодействуют с оборудованием и другими программами посредством операционной системы. Также на простом языке — вспомогательные программы.\n\nК **прикладному программному обеспечению** относятся компьютерные программы, написанные для пользователей или самими пользователями для задания компьютеру конкретной работы. Программы обработки заказов или создания списков рассылки — пример прикладного программного обеспечения. Программистов, которые пишут прикладное программное обеспечение, называют **прикладными программистами**."
          }
        }
      ]
    },
    {
      "data": {
        "title": "Прикладная информатика",
        "description": "**Прикладная информатика** — область информатики, направленая на выявление определённых понятий в области информатики, которые могут быть использованы для решения стандартных задач, таких, как хранение и управление информацией с помощью структур данных, построение алгоритмов, модели решения общих или сложных задач. Например, алгоритм сортировки и быстрое преобразования Фурье.\n\nПомимо этого, прикладная информатика объединяет конкретные примеры применения информатики в тех или иных областях жизни, науки или производства, например, в бизнес-информатике, геоинформатике, компьютерной лингвистике, биоинформатике, хемоинформатике и т. д.\n\nОдной из центральных тем прикладной информатики является инженерия программного обеспечения (англ. *Software Engineering*). Речь идёт о систематическом процессе разработок от этапа формирования идеи до создания готового программного обеспечения. Прикладная информатика также связана с созданием необходимого инструментария для разработки программного обеспечения, например, разработка компиляторов."
      },
      "children": [
        {
          "data": {
            "title": "АСНИ",
            "description": "**АСНИ** — **а**втоматизированная **с**истема **н**аучных **и**сследований (реже используются термины **САНИ** — система автоматизации научных исследований и **САЭ** — система автоматизации эксперимента) — это программно-аппаратный комплекс на базе средств вычислительной техники, предназначенный для проведения научных исследований или комплексных испытаний образцов новой техники на основе получения и использования моделей исследуемых объектов, явлений и процессов.\n\nПримеры:\n\n1.EPICS (от англ.  **experimental physics and industrial control system**) — система управления для экспериментальной физики и промышленности, разработка Аргоннской национальной лаборатории, США.\n2.TANGO (от англ.  **taco next generation objects**) — свободная распределённая система управления экспериментальными установками, разрабатываемая европейским сообществом синхротронов."
          },
          "children": [
            {
              "data": {
                "title": "Ада Лавлейс",
                "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/a/a4/Ada_Lovelace_portrait.jpg)\n\nАвгуста Ада Кинг (урождённая Байрон), графиня Лавлейс (англ. Augusta Ada King Byron, Countess of Lovelace), более известная как Ада Лавлейс (10 декабря 1815, Лондон, Великобритания — 27 ноября 1852, Лондон) — математик. Известна прежде всего созданием описания вычислительной машины, проект которой был разработан Чарльзом Бэббиджем. Составила первую в мире программу (для этой машины). Ввела в употребление термины «цикл» и «рабочая ячейка», считается первым программистом в истории.\n\nАда занималась переводом записей инженера Луиджи Менабреа, и в комментарии к одной из них описала алгоритм вычисления чисел Бернулли на аналитической машине. Было признано, что это первая программа, специально реализованная для воспроизведения на компьютере, и по этой причине Ада Лавлейс считается первым программистом, несмотря на то, что машина Бэббиджа так и не была сконструирована при жизни Ады. Более того, в своих записях она предрекала, что, подобно тому, как Жаккардов ткацкий станок может ткать цветы и листья, аналитическая машина способна создавать алгебраические формулы, а в перспективе — писать музыку, рисовать картины — и укажет «науке такие пути, какие нам и не снились»."
              }
            }
          ]
        },
        {
          "data": {
            "title": "САПР",
            "description": "**Система автоматизированного проектирования** — автоматизированная система, реализующая информационную технологию выполнения функций проектирования, представляет собой организационно-техническую систему, предназначенную для автоматизации процесса проектирования, состоящую из персонала и комплекса технических, программных и других средств автоматизации его деятельности.\n\nВ рамках жизненного цикла промышленных изделий САПР решает задачи автоматизации работ на стадиях проектирования и подготовки производства."
          },
          "children": []
        },
        {
          "data": {
            "title": "АСУ",
            "description": "**Автоматизированная система управления** (сокращённо **АСУ**) — комплекс аппаратных и программных средств, а также персонала, предназначенный для управления различными процессами в рамках технологического процесса, производства, предприятия. АСУ применяются в различных отраслях промышленности, энергетике, транспорте и т. п. Термин «автоматизированная», в отличие от термина «автоматическая», подчёркивает сохранение за человеком-оператором некоторых функций, либо наиболее общего, целеполагающего характера, либо не поддающихся автоматизации. АСУ с Системой поддержки принятия решений (СППР), являются основным инструментом повышения обоснованности управленческих решений."
          },
          "children": []
        },
        {
          "data": {
            "title": "АИС",
            "description": "**Информационная система** (ИС) — система, предназначенная для хранения, поиска и обработки информации, и соответствующие организационные ресурсы (человеческие, технические, финансовые и т. д.), которые обеспечивают и распространяют информацию (ISO/IEC 2382:2015).\n\nИнформационная система предназначена для своевременного обеспечения надлежащих людей надлежащей информацией, то есть для удовлетворения конкретных информационных потребностей в рамках определенной предметной области, при этом результатом функционирования информационных систем является информационная продукция — документы, информационные массивы, базы данных и информационные услуги."
          },
          "children": []
        },
        {
          "data": {
            "title": "АОС",
            "description": ""
          },
          "children": []
        }
      ]
    },
    {
      "data": {
        "title": "Вычислительная техника",
        "description": "Компьютер (англ. *computer*, МФА: [kəmˈpjuː.tə(ɹ)] — «вычислитель») — устройство или система, способное выполнять заданную чётко определённую изменяемую последовательность операций. Это чаще всего операции численных расчётов и манипулирования данными, однако сюда относятся и операции ввода-вывода. Описание последовательности операций называется программой."
      },
      "children": [
        {
          "data": {
            "title": "Вильгельм Шиккард",
            "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/WilhelmSchickardPortrait.jpg/800px-WilhelmSchickardPortrait.jpg)\n\nВильгельм Шиккард (нем. Wilhelm Schickard; 22 апреля 1592, Херренберг — 23 октября 1635, Тюбинген) — немецкий учёный, астроном, математик и востоковед, создатель первого, после антикитерского механизма, арифмометра, профессор кафедры восточных языков в университете Тюбингена.\n\nБолее 300 лет считалось, что автором первой счётной машины является Блез Паскаль. И вот в 1957 году директор Кеплеровского научного центра Франц Гаммер сделал в Германии на семинаре по истории математики сенсационный доклад, из которого следовало, что проект первой счётной машины появился как минимум на два десятилетия раньше «паскалева колеса», а сама машина была изготовлена в середине 1623 года.\n\nРаботая в городской библиотеке Штутгарта, Гаммер обнаружил фотокопию эскиза неизвестного ранее счётного устройства. (Оригинал находился в архиве выдающегося астронома и математика Иоганна Кеплера в Пулковской обсерватории близ Санкт-Петербурга.) Гаммеру удалось установить, что этот эскиз есть не что иное, как отсутствовавшее приложение к опубликованному ранее письму Иоганну Кеплеру профессора университета в Тюбингене Вильгельма Шиккарда от 25 февраля 1624 года, где Шиккард, ссылаясь на чертёж, описывал изобретённую им счётную машину.\n\nМашина содержала суммирующее и множительное устройства, а также механизм для записи промежуточных результатов. Первый блок — шестиразрядная суммирующая машина — представлял собой соединение зубчатых передач. На каждой оси имелись шестерня с десятью зубцами и вспомогательное однозубое колесо — палец. Палец служил для того, чтобы передавать единицу в следующий разряд (поворачивать шестерёнку на десятую часть полного оборота, после того как шестерёнка предыдущего разряда сделает такой оборот). При вычитании шестерёнки следовало вращать в обратную сторону. Контроль хода вычислений можно было вести при помощи специальных окошек, где появлялись цифры. Для перемножения использовалось устройство, чью главную часть составляли шесть осей с «навёрнутыми» на них таблицами умножения."
          }
        },
        {
          "data": {
            "title": "Блез Паскаль",
            "description": "![enter image description here](https://upload.wikimedia.org/wikipedia/commons/7/79/Blaise_pascal.jpg)\n\nБлез Паскаль (фр. Blaise Pascal [blɛz pasˈkal]; 19 июня 1623, Клермон-Ферран, Франция — 19 августа 1662, Париж, Франция) — французский математик, механик, физик, литератор и философ. Классик французской литературы, один из основателей математического анализа, теории вероятностей и проективной геометрии, создатель первых образцов счётной техники, автор основного закона гидростатики.\n\nСуммирующая машина Паска́ля («Паскали́на») — арифметическая машина, изобретённая французским учёным Блезом Паскалем (1623—1662Француз Блез Паскаль начал создавать суммирующую машину «Паскалину» в 1642 году в возрасте 19 лет, наблюдая за работой своего отца, который был сборщиком налогов и часто выполнял долгие и утомительные расчёты.\n\n\n\nМашина Паскаля представляла собой механическое устройство в виде ящичка с многочисленными связанными одна с другой шестерёнками. Складываемые числа вводились в машину при помощи соответствующего поворота наборных колёсиков. На каждое из этих колёсиков, соответствовавших одному десятичному разряду числа, были нанесены деления от 0 до 9. При вводе числа, колесики прокручивались до соответствующей цифры. Совершив полный оборот, избыток над цифрой 9 колёсико переносило на соседний разряд, сдвигая соседнее колесо на 1 позицию. Первые варианты «Паскалины» имели пять зубчатых колёс, позднее их число увеличилось до шести или даже восьми, что позволяло работать с большими числами, вплоть до 9 999 999. Ответ появлялся в верхней части металлического корпуса. Вращение колёс было возможно лишь в одном направлении, исключая возможность непосредственного оперирования отрицательными числами. Тем не менее машина Паскаля позволяла выполнять не только сложение, но и другие операции, но требовала при этом применения довольно неудобной процедуры повторных сложений. Вычитание выполнялось при помощи дополнений до девятки, которые для помощи считавшему появлялись в окошке, размещённом над выставленным оригинальным значением.\n\n\n\nНесмотря на преимущества автоматических вычислений, использование десятичной машины для финансовых расчётов в рамках действовавшей в то время во Франции денежной системы было затруднительным. Расчёты велись в ливрах, су и денье. В ливре насчитывалось 20 су, в су — 12 денье. Использование десятичной системы в недесятичных финансовых расчётах усложняло и без того нелёгкий процесс вычислений.\n\n\n\nТем не менее примерно за 10 лет Паскаль построил около 50 и даже сумел продать около дюжины вариантов своей машины. Несмотря на вызываемый ею всеобщий восторг, машина не принесла богатства своему создателю. Сложность и высокая стоимость машины в сочетании с небольшими вычислительными способностями служили препятствием её широкому распространению. Тем не менее, заложенный в основу «Паскалины» принцип связанных колёс почти на три столетия стал основой для большинства создаваемых вычислительных устройств.\n\n\n\nМашина Паскаля стала вторым реально работающим вычислительным устройством после считающих часов Вильгельма Шикарда (нем. Wilhelm Schickard), созданных в 1623 году.) в 1642 году."
          }
        }
      ]
    }
  ]
}
